version: '3.8'

services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    restart: always
    ports:
      - 3000:80
    networks:
      - gleampost-networks
    depends_on:
      - loadbalancer
      - api
      - db
  loadbalancer:
    image: nginx:1.25.2
    restart: always
    volumes:
      - ./docker/conf.d:/etc/nginx/conf.d
    depends_on:
      - api
      - db
    ports:
      - 8080:8080
    networks:
      - gleampost-networks
  api:
    build:
      dockerfile: Dockerfile
      context: ./backend
    deploy:
      replicas: 2
    ports:
      - 8080
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=gleam_post
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - UPLOAD_PATH=/app/public/uploads
    volumes:
      - upload_data:/app/public/uploads
    networks:
      - gleampost-networks
    depends_on:
      - db
  db:
    image: postgres:14.5
    #restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
      # copy the sql script to fill tables
    networks:
      - gleampost-networks

networks:
  gleampost-networks:
    external: true

volumes:
  pg_data:
  upload_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backend/public/uploads